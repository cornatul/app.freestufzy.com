{"version":3,"sources":["webpack:///src/app/posts/posts.resolver.ts","webpack:///src/app/posts/posts.module.ts","webpack:///src/app/posts/posts.page.html","webpack:///src/app/posts/posts.page.scss","webpack:///src/app/posts/posts.page.ts"],"names":["PostsResolver","wordpressService","route","categoryId","queryParams","categoryTitle","getRecentPosts","pipe","posts","routes","path","component","resolve","data","runGuardsAndResolvers","PostsPageModule","imports","forChild","declarations","providers","PostsPage","loadingController","router","authenticationService","Array","loggedInObservable","isLoggedIn","loggedUserObservable","subscribe","user","routeData","event","page","Math","ceil","length","newPagePosts","push","target","complete","err","disabled","logOut","then","res","navigate","console","log","selector","template"],"mappings":"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","file":"posts-posts-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { WordpressService } from '../services/wordpress.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PostsResolver implements Resolve<any> {\n\n  constructor(private wordpressService: WordpressService) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const categoryId = route.queryParams['categoryId'];\n    const categoryTitle = route.queryParams['title'];\n\n    return this.wordpressService.getRecentPosts(categoryId)\n    .pipe(\n      map((posts) => {\n        return { posts, categoryTitle, categoryId };\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostsPage } from './posts.page';\nimport { PostsResolver } from './posts.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostsPage,\n    resolve: {\n      data: PostsResolver\n    },\n    runGuardsAndResolvers: 'paramsOrQueryParamsChange' // because we use the same route for all posts and for category posts, we need to add this to refetch data \n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PostsPage],\n  providers: [PostsResolver]\n})\nexport class PostsPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-title *ngIf=\\\"!categoryTitle\\\">Latest free items</ion-title>\\n    <ion-title *ngIf=\\\"categoryTitle\\\">{{categoryTitle}} posts</ion-title>\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"categoryTitle\\\">\\n      <ion-back-button defaultHref=\\\"posts\\\"></ion-back-button>\\n    </ion-buttons>\\n    <!-- Hamburger -->\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"(loggedInObservable | async) === false\\\" [routerLink]=\\\"['/login']\\\">Log In\\n      </ion-button>\\n      <ion-button *ngIf=\\\"(loggedInObservable | async) === true\\\" (click)=\\\"logOut()\\\">Log out\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"page-content\\\">\\n  <ion-card *ngFor=\\\"let post of posts\\\" [routerLink]=\\\"['/post', post.id]\\\" class=\\\"post-card\\\">\\n\\n    <img [src]=\\\"post.image\\\" style=\\\"width: 100vw;\\\" />\\n\\n    <ion-card-header>\\n      <ion-card-title [innerHTML]=\\\"post.title.rendered\\\"></ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <p [innerHTML]=\\\"post.excerpt.rendered\\\"></p>\\n    </ion-card-content>\\n    <ion-item class=\\\"ion-activated\\\" detail lines=\\\"none\\\" color=\\\"danger\\\">\\n      <ion-label *ngIf=\\\"!post.modified\\\">{{post.date | date}}</ion-label><ion-label *ngIf=\\\"post.modified\\\">{{post.modified | date}}</ion-label>\\n      <ion-label class=\\\"read-more-label\\\">View Item</ion-label>\\n    </ion-item>\\n  </ion-card>\\n  <ion-infinite-scroll (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content\\n    loadingSpinner=\\\"bubbles\\\"\\n    loadingText=\\\"Loading more items ...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\\n\";","export default \".page-content {\\n  --background: var(--ion-color-light);\\n}\\n.page-content .post-card {\\n  outline: none;\\n}\\n.page-content .post-card .read-more-label {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Bvc3RzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0FBQ0Y7QUFDRTtFQUNFLGFBQUE7QUFDSjtBQUNJO0VBQ0UsaUJBQUE7QUFDTiIsImZpbGUiOiJwb3N0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZS1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xuXG4gIC5wb3N0LWNhcmQge1xuICAgIG91dGxpbmU6IG5vbmU7XG5cbiAgICAucmVhZC1tb3JlLWxhYmVsIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cbiAgfVxufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { WordpressService } from '../services/wordpress.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.page.html',\n  styleUrls: ['./posts.page.scss'],\n})\nexport class PostsPage implements OnInit {\n\n  posts: Array<any> = new Array<any>();\n  loggedInObservable: Observable<any> = this.authenticationService.isLoggedIn();\n\n  categoryId: number;\n  categoryTitle: string;\n\n  constructor(\n    public loadingController: LoadingController,\n    private router: Router,\n    private route: ActivatedRoute,\n    public wordpressService: WordpressService,\n    public authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n\n    this.authenticationService.loggedUserObservable()\n    .subscribe(user => {\n      this.loggedInObservable = user == null ? of(false): of(true);\n    });\n\n    this.route.data.subscribe(routeData => {\n      const data = routeData['data'];\n\n      this.posts = data.posts;\n      this.categoryId = data.categoryId;\n      this.categoryTitle = data.categoryTitle;\n    });\n  }\n\n  loadData(event: any) {\n    const page = (Math.ceil(this.posts.length / 10)) + 1;\n\n    this.wordpressService.getRecentPosts(this.categoryId, page)\n    .subscribe((newPagePosts: []) => {\n      this.posts.push(...newPagePosts);\n      event.target.complete();\n    }, err => {\n      // there are no more posts available\n      event.target.disabled = true;\n    });\n  }\n\n  logOut(){\n    this.authenticationService.logOut()\n    .then(\n      res => this.router.navigate(['/login']),\n      err => console.log('Error logging out')\n    );\n  }\n}\n"]}