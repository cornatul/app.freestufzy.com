{"version":3,"sources":["./src/app/posts/posts.resolver.ts","./src/app/posts/posts.module.ts","./src/app/posts/posts.page.html","./src/app/posts/posts.page.scss","./src/app/posts/posts.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AAEsB;AAE5B;IAGxB,aAAa,SAAb,aAAa;IAExB,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAE3D,OAAO,CAAC,KAA6B;QACnC,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACnD,MAAM,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEjD,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC;aACtD,IAAI,CACH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACZ,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC;QAC9C,CAAC,CAAC,CACH;IACH,CAAC;CACF;;YApBQ,4EAAgB;;AAKZ,aAAa;IADzB,gEAAU,EAAE;GACA,aAAa,CAezB;AAfyB;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AACM;AACF;AACU;AAEV;AAEJ;AACQ;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;QACpB,OAAO,EAAE;YACP,IAAI,EAAE,6DAAa;SACpB;QACD,qBAAqB,EAAE,2BAA2B,CAAC,2GAA2G;KAC/J;CACF,CAAC;IAYW,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;QACzB,SAAS,EAAE,CAAC,6DAAa,CAAC;KAC3B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;AC/B5B;AAAe,mOAAoK,eAAe,uzBAAuzB,sWAAsW,kBAAkB,iDAAiD,sBAAsB,0WAA0W,E;;;;;;;;;;;;ACAlyD;AAAe,+EAAgB,yCAAyC,GAAG,4BAA4B,kBAAkB,GAAG,6CAA6C,sBAAsB,GAAG,6CAA6C,2dAA2d,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxpB;AACC;AACM;AACQ;AACU;AACrC;IAOzB,SAAS,SAAT,SAAS;IAQpB,YACS,iBAAoC,EACnC,MAAc,EACd,KAAqB,EACtB,gBAAkC,EAClC,qBAA4C;QAJ5C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACnC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QAXrD,UAAK,GAAe,IAAI,KAAK,EAAO,CAAC;QACrC,uBAAkB,GAAoB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;IAW3E,CAAC;IAEJ,QAAQ;QAEN,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE;aAChD,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,kBAAkB,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,+CAAE,CAAC,KAAK,CAAC,EAAC,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACpC,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAE/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAU;QACjB,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAErD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;aAC1D,SAAS,CAAC,CAAC,YAAgB,EAAE,EAAE;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;YACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,oCAAoC;YACpC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE;aAClC,IAAI,CACH,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EACvC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CACxC,CAAC;IACJ,CAAC;CACF;;YA/DQ,gEAAiB;YACjB,sDAAM;YAAE,8DAAc;YACtB,4EAAgB;YAChB,sFAAqB;;AAQjB,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,6EAAgC;;KAEjC,CAAC;GACW,SAAS,CAoDrB;AApDqB","file":"posts-posts-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { WordpressService } from '../services/wordpress.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PostsResolver implements Resolve<any> {\n\n  constructor(private wordpressService: WordpressService) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const categoryId = route.queryParams['categoryId'];\n    const categoryTitle = route.queryParams['title'];\n\n    return this.wordpressService.getRecentPosts(categoryId)\n    .pipe(\n      map((posts) => {\n        return { posts, categoryTitle, categoryId };\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostsPage } from './posts.page';\nimport { PostsResolver } from './posts.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostsPage,\n    resolve: {\n      data: PostsResolver\n    },\n    runGuardsAndResolvers: 'paramsOrQueryParamsChange' // because we use the same route for all posts and for category posts, we need to add this to refetch data \n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PostsPage],\n  providers: [PostsResolver]\n})\nexport class PostsPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-title *ngIf=\\\"!categoryTitle\\\">Latest free items</ion-title>\\n    <ion-title *ngIf=\\\"categoryTitle\\\">{{categoryTitle}} posts</ion-title>\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"categoryTitle\\\">\\n      <ion-back-button defaultHref=\\\"posts\\\"></ion-back-button>\\n    </ion-buttons>\\n    <!-- Hamburger -->\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"(loggedInObservable | async) === false\\\" [routerLink]=\\\"['/login']\\\">Log In\\n      </ion-button>\\n      <ion-button *ngIf=\\\"(loggedInObservable | async) === true\\\" (click)=\\\"logOut()\\\">Log out\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"page-content\\\">\\n  <ion-card *ngFor=\\\"let post of posts\\\" [routerLink]=\\\"['/post', post.id]\\\" class=\\\"post-card\\\">\\n\\n    <img [src]=\\\"post.image\\\" style=\\\"width: 100vw;\\\" />\\n\\n    <ion-card-header>\\n      <ion-card-title [innerHTML]=\\\"post.title.rendered\\\"></ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <p [innerHTML]=\\\"post.excerpt.rendered\\\"></p>\\n    </ion-card-content>\\n    <ion-item class=\\\"ion-activated\\\" detail lines=\\\"none\\\" color=\\\"danger\\\">\\n      <ion-label *ngIf=\\\"!post.modified\\\">{{post.date | date}}</ion-label><ion-label *ngIf=\\\"post.modified\\\">{{post.modified | date}}</ion-label>\\n      <ion-label class=\\\"read-more-label\\\">View Item</ion-label>\\n    </ion-item>\\n  </ion-card>\\n  <ion-infinite-scroll (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content\\n    loadingSpinner=\\\"bubbles\\\"\\n    loadingText=\\\"Loading more items ...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\\n\";","export default \".page-content {\\n  --background: var(--ion-color-light);\\n}\\n.page-content .post-card {\\n  outline: none;\\n}\\n.page-content .post-card .read-more-label {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Bvc3RzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0FBQ0Y7QUFDRTtFQUNFLGFBQUE7QUFDSjtBQUNJO0VBQ0UsaUJBQUE7QUFDTiIsImZpbGUiOiJwb3N0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZS1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xuXG4gIC5wb3N0LWNhcmQge1xuICAgIG91dGxpbmU6IG5vbmU7XG5cbiAgICAucmVhZC1tb3JlLWxhYmVsIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cbiAgfVxufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { WordpressService } from '../services/wordpress.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.page.html',\n  styleUrls: ['./posts.page.scss'],\n})\nexport class PostsPage implements OnInit {\n\n  posts: Array<any> = new Array<any>();\n  loggedInObservable: Observable<any> = this.authenticationService.isLoggedIn();\n\n  categoryId: number;\n  categoryTitle: string;\n\n  constructor(\n    public loadingController: LoadingController,\n    private router: Router,\n    private route: ActivatedRoute,\n    public wordpressService: WordpressService,\n    public authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n\n    this.authenticationService.loggedUserObservable()\n    .subscribe(user => {\n      this.loggedInObservable = user == null ? of(false): of(true);\n    });\n\n    this.route.data.subscribe(routeData => {\n      const data = routeData['data'];\n\n      this.posts = data.posts;\n      this.categoryId = data.categoryId;\n      this.categoryTitle = data.categoryTitle;\n    });\n  }\n\n  loadData(event: any) {\n    const page = (Math.ceil(this.posts.length / 10)) + 1;\n\n    this.wordpressService.getRecentPosts(this.categoryId, page)\n    .subscribe((newPagePosts: []) => {\n      this.posts.push(...newPagePosts);\n      event.target.complete();\n    }, err => {\n      // there are no more posts available\n      event.target.disabled = true;\n    });\n  }\n\n  logOut(){\n    this.authenticationService.logOut()\n    .then(\n      res => this.router.navigate(['/login']),\n      err => console.log('Error logging out')\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}