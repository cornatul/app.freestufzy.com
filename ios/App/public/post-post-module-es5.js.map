{"version":3,"sources":["webpack:///src/app/post/post.page.html","webpack:///src/app/post/post.page.ts","webpack:///src/app/post/post.page.scss","webpack:///src/app/post/post.module.ts","webpack:///src/app/post/post.resolver.ts"],"names":["PostPage","loadingController","alertController","router","route","wordpressService","authenticationService","comments","categories","data","subscribe","routeData","post","author","name","getComments","id","event","page","length","push","target","complete","err","disabled","getUser","loggedUser","user","JSON","parse","validateAuthToken","token","pipe","error","result","openLogInAlert","openEnterCommentAlert","create","header","message","buttons","text","role","handler","navigate","alert","present","inputs","type","placeholder","loading","createComment","comment","Object","keys","map","i","dismiss","selector","template","routes","path","component","resolve","PostPageModule","imports","forChild","declarations","providers","PostResolver","paramMap","get","getPost","getAuthor","getPostCategories","postData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFA,QAAQ;AAOnB,0BACSC,iBADT,EAESC,eAFT,EAGUC,MAHV,EAIUC,KAJV,EAKSC,gBALT,EAMSC,qBANT,EAMqD;AAAA;;AAL5C,eAAAL,iBAAA,GAAAA,iBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AATT,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,UAAA,GAAa,EAAb;AASI;;AAde;AAAA;AAAA,iBAgBb,oBAAW;;;;;;;;AACf,2BAAKJ,KAAL,CAAWK,IAAX,CAAgBC,SAAhB,CAA0B,UAAAC,SAAS,EAAI;AACrC,4BAAMF,IAAI,GAAGE,SAAS,CAAC,MAAD,CAAtB;AACA,6BAAI,CAACC,IAAL,GAAYH,IAAI,CAACG,IAAjB;AACA,6BAAI,CAACC,MAAL,GAAcJ,IAAI,CAACI,MAAL,CAAYC,IAA1B;AACA,6BAAI,CAACN,UAAL,GAAkBC,IAAI,CAACD,UAAvB;AACA,6BAAI,CAACD,QAAL,GAAgBE,IAAI,CAACF,QAArB;AACD,uBAND;;;;;;;;;AAOD;AAxBkB;AAAA;AAAA,iBA0BnB,uBAAW;AACT,mBAAO,KAAKF,gBAAL,CAAsBU,WAAtB,CAAkC,KAAKH,IAAL,CAAUI,EAA5C,CAAP;AACD;AA5BkB;AAAA;AAAA,iBA8BnB,0BAAiBC,KAAjB,EAAwB;AAAA;;AACtB,gBAAMC,IAAI,GAAI,KAAKX,QAAL,CAAcY,MAAd,GAAuB,EAAxB,GAA8B,CAA3C;AAEA,iBAAKd,gBAAL,CAAsBU,WAAtB,CAAkC,KAAKH,IAAL,CAAUI,EAA5C,EAAgDE,IAAhD,EACCR,SADD,CACW,UAACH,QAAD,EAAkB;AAAA;;AAC3B,uCAAI,CAACA,QAAL,EAAca,IAAd,2CAAsBb,QAAtB;;AACAU,mBAAK,CAACI,MAAN,CAAaC,QAAb;AACD,aAJD,EAIG,UAAAC,GAAG,EAAI;AACR;AACAN,mBAAK,CAACI,MAAN,CAAaG,QAAb,GAAwB,IAAxB;AACD,aAPD;AAQD;AAzCkB;AAAA;AAAA,iBA2Cb,yBAAgB;;;;;;;;;;AACD,6BAAM,KAAKlB,qBAAL,CAA2BmB,OAA3B,EAAN;;;AAAbC,gC;;2BAEFA,U;;;;;AACIC,0B,GAAOC,IAAI,CAACC,KAAL,CAAWH,UAAX,C,EAEb;;AACA,2BAAKpB,qBAAL,CAA2BwB,iBAA3B,CAA6CH,IAAI,CAACI,KAAlD,EACCC,IADD,CAEE,kEAAW,UAAAC,KAAK;AAAA,+BAAI,gDAAGA,KAAH,CAAJ;AAAA,uBAAhB,CAFF,EAGE,2DAAI,UAAAC,MAAM,EAAI;AACZ,4BAAIA,MAAM,CAACD,KAAX,EAAkB;AAChB;AACA,gCAAI,CAACE,cAAL;AACD,yBAHD,MAIK;AACH;AACA,gCAAI,CAACC,qBAAL,CAA2BT,IAA3B;AACD;AACF,uBATD,CAHF,EAaEjB,SAbF;;;;;;AAeA,6BAAM,KAAKyB,cAAL,EAAN;;;;;;;;;AAEH;AAnEkB;AAAA;AAAA,iBAqEb,0BAAiB;;;;;;;;;;AACP,6BAAM,KAAKjC,eAAL,CAAqBmC,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,cADsC;AAE9CC,+BAAO,EAAE,gDAFqC;AAG9CC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,QADR;AAEEC,8BAAI,EAAE;AAFR,yBADO,EAKP;AACED,8BAAI,EAAE,OADR;AAEEE,iCAAO,EAAE,mBAAM;AACb,kCAAI,CAACxC,MAAL,CAAYyC,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AAJH,yBALO;AAHqC,uBAA5B,CAAN;;;AAARC,2B;;AAgBN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAvFkB;AAAA;AAAA,iBAyFb,+BAAsBnB,IAAtB,EAAiC;;;;;;;;;;AACvB,6BAAM,KAAKzB,eAAL,CAAqBmC,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,gBADsC;AAE9CS,8BAAM,EAAE,CACN;AACEjC,8BAAI,EAAE,SADR;AAEEkC,8BAAI,EAAE,MAFR;AAGEC,qCAAW,EAAE;AAHf,yBADM,CAFsC;AAS9CT,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,QADR;AAEEC,8BAAI,EAAE;AAFR,yBADO,EAKP;AACED,8BAAI,EAAE,QADR;AAEEE,iCAAO,EAAE,iBAAMlC,IAAN;AAAA,mCAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,6CAAM,KAAKR,iBAAL,CAAuBoC,MAAvB,EAAN;;AADK;AACfa,6CADe;AAAA;AAErB,6CAAMA,OAAO,CAACJ,OAAR,EAAN;;AAFqB;AAIrB,2CAAKzC,gBAAL,CAAsB8C,aAAtB,CAAoC,KAAKvC,IAAL,CAAUI,EAA9C,EAAkDW,IAAlD,EAAwDlB,IAAI,CAAC2C,OAA7D,EACC1C,SADD,CAEE,UAAOD,IAAP;AAAA,+CAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACd,uDAAKM,WAAL,GAAmBL,SAAnB,CAA8B,UAAMH,QAAN;AAAA,2DAAkB;AAAA;AAAA;AAAA;AAAA;AAC9C,mEAAKA,QAAL,GAAgB8C,MAAM,CAACC,IAAP,CAAY/C,QAAZ,EAAsBgD,GAAtB,CAA0B,UAAAC,CAAC;AAAA,uEAAIjD,QAAQ,CAACiD,CAAD,CAAZ;AAAA,+DAA3B,CAAhB;AAD8C;AAE9C,qEAAMN,OAAO,CAACO,OAAR,EAAN;;AAF8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAlB;AAAA,mDAA9B;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAhB;AAAA,uCAFF,EAQE,UAAOlC,GAAP;AAAA,+CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,yDAAM2B,OAAO,CAACO,OAAR,EAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAf;AAAA,uCARF;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAd;AAAA;AAFX,yBALO;AATqC,uBAA5B,CAAN;;;AAARZ,2B;;AAoCN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AA/HkB;;AAAA;AAAA,S;;;;gBAZZ;;gBAAmB;;gBACnB;;gBAAQ;;gBACR;;gBACA;;;;AASI9C,cAAQ,6DALpB,gEAAU;AACT0D,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR,kEAFS;;AAAA,OAAV,CAKoB,GAAR3D,QAAQ,CAAR;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,UAAM4D,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,mDAFb;AAGEC,eAAO,EAAE;AACPtD,cAAI,EAAE;AADC;AAHX,OADqB,CAAvB;;UAoBauD,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAV1B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBN,MAAtB,CAJO,CADD;AAORO,oBAAY,EAAE,CAAC,mDAAD,CAPN;AAQRC,iBAAS,EAAE,CAAC,2DAAD;AARH,OAAT,CAU0B,GAAdJ,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCvBAK,YAAY;AAEvB,8BAAoBhE,gBAApB,EAAwD;AAAA;;AAApC,eAAAA,gBAAA,GAAAA,gBAAA;AAAuC;;AAFpC;AAAA;AAAA,iBAIvB,iBAAQD,KAAR,EAAqC;AAAA;;AACnC,gBAAMY,EAAE,GAAGZ,KAAK,CAACkE,QAAN,CAAeC,GAAf,CAAmB,IAAnB,CAAX;AAEA,mBAAO,KAAKlE,gBAAL,CAAsBmE,OAAtB,CAA8BxD,EAA9B,EACNgB,IADM,CAEL,iEAAU,UAACpB,IAAD,EAAe;AACvB,kBAAMC,MAAM,GAAG,MAAI,CAACR,gBAAL,CAAsBoE,SAAtB,CAAgC7D,IAAI,CAACC,MAArC,CAAf;;AACA,kBAAML,UAAU,GAAG,MAAI,CAACH,gBAAL,CAAsBqE,iBAAtB,CAAwC9D,IAAxC,CAAnB;;AACA,kBAAML,QAAQ,GAAG,MAAI,CAACF,gBAAL,CAAsBU,WAAtB,CAAkCH,IAAI,CAACI,EAAvC,CAAjB;;AAEA,qBAAO,sDAAS;AAAEH,sBAAM,EAANA,MAAF;AAAUL,0BAAU,EAAVA,UAAV;AAAsBD,wBAAQ,EAARA;AAAtB,eAAT,EACNyB,IADM,CAEL,2DAAI,UAAA2C,QAAQ,EAAI;AACd,uBAAO,MAAP,OAAO,CAAP,kBAAWA,QAAX,CAAO,EAAY;AAAE/D,sBAAI,EAAJA;AAAF,iBAAZ,CAAP;AACD,eAFD,CAFK,CAAP;AAMD,aAXD,CAFK,CAAP;AAeD;AAtBsB;;AAAA;AAAA,S;;;;gBALhB;;;;AAKIyD,kBAAY,6DADxB,kEACwB,GAAZA,YAAY,CAAZ","file":"post-post-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-title [innerHTML]=\\\"post.title.rendered\\\">Free Item</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"posts\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"page-content\\\">\\n    <img [src]=\\\"post.image\\\" style=\\\"width: 100vw\\\" />\\n\\n    <h1 [innerHTML]=\\\"post.title.rendered\\\"></h1>\\n    <p class=\\\"post-body\\\" [innerHTML]=\\\"post.content.rendered\\\"></p>\\n\\n    <p>\\n        Item added on <span *ngIf=\\\"!post.modified\\\">{{post.date | date}}</span><span *ngIf=\\\"post.modified\\\">{{post.modified | date}}</span>\\n    </p>\\n\\n    <ion-badge class=\\\"post-category\\\" color=\\\"danger\\\" *ngFor=\\\"let category of categories\\\"\\n      [routerLink]=\\\"['/posts']\\\" [queryParams]=\\\"{ categoryId: category.id,  title: category.name}\\\">\\n      {{category.name}}\\n    </ion-badge>\\n\\n    <ion-list class=\\\"post-comments\\\">\\n      <ion-item *ngFor=\\\"let comment of comments\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"{{comment.author_avatar_urls[24]}}\\\">\\n        </ion-avatar>\\n        <ion-label>\\n          <h2>{{comment.author_name}}</h2>\\n          <p [innerHTML]=\\\"comment.content.rendered\\\"></p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-infinite-scroll (ionInfinite)=\\\"loadMoreComments($event)\\\">\\n      <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more messages...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n</ion-content>\\n\\n<ion-footer>\\n <ion-toolbar>\\n  <ion-button color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"createComment()\\\">Contact User</ion-button>\\n </ion-toolbar>\\n</ion-footer>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { WordpressService } from '../services/wordpress.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.page.html',\n  styleUrls: ['./post.page.scss'],\n})\nexport class PostPage implements OnInit {\n\n  post: any;\n  author: string;\n  comments = [];\n  categories = [];\n\n  constructor(\n    public loadingController: LoadingController,\n    public alertController: AlertController,\n    private router: Router,\n    private route: ActivatedRoute,\n    public wordpressService: WordpressService,\n    public authenticationService: AuthenticationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.data.subscribe(routeData => {\n      const data = routeData['data'];\n      this.post = data.post;\n      this.author = data.author.name;\n      this.categories = data.categories;\n      this.comments = data.comments;\n    });\n  }\n\n  getComments(){\n    return this.wordpressService.getComments(this.post.id);\n  }\n\n  loadMoreComments(event) {\n    const page = (this.comments.length / 10) + 1;\n\n    this.wordpressService.getComments(this.post.id, page)\n    .subscribe((comments: []) => {\n      this.comments.push(...comments);\n      event.target.complete();\n    }, err => {\n      // there are no more comments available\n      event.target.disabled = true;\n    });\n  }\n\n  async createComment() {\n    const loggedUser = await this.authenticationService.getUser();\n\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser);\n\n      // check if token is valid\n      this.authenticationService.validateAuthToken(user.token)\n      .pipe(\n        catchError(error => of(error)),\n        map(result => {\n          if (result.error) {\n            // token is expired\n            this.openLogInAlert();\n          }\n          else {\n            // user is logged in and token is valid\n            this.openEnterCommentAlert(user);\n          }\n        })\n      ).subscribe();\n    } else {\n      await this.openLogInAlert();\n    }\n  }\n\n  async openLogInAlert() {\n    const alert = await this.alertController.create({\n      header: 'Please login',\n      message: 'You need to login in order to contact the user',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Login',\n          handler: () => {\n            this.router.navigate(['/login']);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async openEnterCommentAlert(user: any) {\n    const alert = await this.alertController.create({\n      header: 'Send a message',\n      inputs: [\n        {\n          name: 'comment',\n          type: 'text',\n          placeholder: 'Message'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Accept',\n          handler: async data => {\n            const loading = await this.loadingController.create();\n            await loading.present();\n\n            this.wordpressService.createComment(this.post.id, user, data.comment)\n            .subscribe(\n              async (data) => {\n                this.getComments().subscribe( async comments => {\n                  this.comments = Object.keys(comments).map(i => comments[i]);\n                  await loading.dismiss();\n                });\n              },\n              async (err) => {\n                await loading.dismiss();\n              }\n            );\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n","export default \".page-content {\\n  --padding-top: 20px;\\n  --padding-start: 20px;\\n  --padding-end: 20px;\\n}\\n.page-content .post-body {\\n  font-size: 16px;\\n  color: var(--ion-color-primary-tint);\\n  line-height: 1.5;\\n}\\n.page-content .post-category {\\n  -webkit-margin-end: 6px;\\n          margin-inline-end: 6px;\\n}\\n.page-content .post-comments {\\n  margin-top: 16px;\\n}\\n::ng-deep .post-body img {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Bvc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7QUFDRTtFQUNFLGVBQUE7RUFDQSxvQ0FBQTtFQUNBLGdCQUFBO0FBQ0o7QUFFRTtFQUNFLHVCQUFBO1VBQUEsc0JBQUE7QUFBSjtBQUdFO0VBQ0UsZ0JBQUE7QUFESjtBQU9JO0VBQ0UsWUFBQTtBQUpOIiwiZmlsZSI6InBvc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtY29udGVudCB7XG4gIC0tcGFkZGluZy10b3A6IDIwcHg7XG4gIC0tcGFkZGluZy1zdGFydDogMjBweDtcbiAgLS1wYWRkaW5nLWVuZDogMjBweDtcblxuICAucG9zdC1ib2R5IHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXRpbnQpO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIH1cblxuICAucG9zdC1jYXRlZ29yeSB7XG4gICAgbWFyZ2luLWlubGluZS1lbmQ6IDZweDtcbiAgfVxuXG4gIC5wb3N0LWNvbW1lbnRzIHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICB9XG59XG5cbjo6bmctZGVlcCB7XG4gIC5wb3N0LWJvZHkge1xuICAgIGltZyB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostPage } from './post.page';\nimport { PostResolver } from './post.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostPage,\n    resolve: {\n      data: PostResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PostPage],\n  providers: [PostResolver]\n})\nexport class PostPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { WordpressService } from '../services/wordpress.service';\nimport { Observable, forkJoin } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\n@Injectable()\nexport class PostResolver implements Resolve<any> {\n\n  constructor(private wordpressService: WordpressService) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n\n    return this.wordpressService.getPost(id)\n    .pipe(\n      concatMap((post: any) => {\n        const author = this.wordpressService.getAuthor(post.author);\n        const categories = this.wordpressService.getPostCategories(post);\n        const comments = this.wordpressService.getComments(post.id);\n\n        return forkJoin({ author, categories, comments })\n        .pipe(\n          map(postData => {\n            return {...postData, post};\n          })\n        )\n      })\n    );\n  }\n}\n"]}